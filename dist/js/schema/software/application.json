{
    "$id": "software/application",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "application schema (base)",
    "type": "object",
    "additionalProperties": true,
    "properties": {
        "shortName": {
            "description": "The short name of the application. e.g. qe",
            "type": "string"
        },
        "summary": {
            "description": "Application's short description.",
            "type": "string"
        },
        "version": {
            "description": "Application version. e.g. 5.3.5",
            "type": "string"
        },
        "build": {
            "description": "Application build. e.g. VTST",
            "type": "string"
        },
        "hasAdvancedComputeOptions": {
            "description": "Whether advanced compute options are present",
            "type": "boolean"
        },
        "isLicensed": {
            "description": "Whether licensing is present",
            "type": "boolean"
        },
        "_id": {
            "description": "entity identity",
            "type": "string"
        },
        "slug": {
            "description": "entity slug",
            "type": "string"
        },
        "systemName": {
            "type": "string"
        },
        "consistencyChecks": {
            "type": "array",
            "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "consistency check",
                "type": "object",
                "description": "The output of consistency checks performed on data adhering to JSON schema, but inconsistent with scientific or logical rules, to show problems in UI.",
                "required": [
                    "key",
                    "name",
                    "severity",
                    "message"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Key of the property of the entity on which the consistency check is performed in Mongo dot notation, e.g. 'basis.coordinates.1'"
                    },
                    "name": {
                        "enum": [
                            "default",
                            "atomsTooClose",
                            "atomsOverlap"
                        ],
                        "description": "Name of the consistency check that is performed, which is listed in an enum."
                    },
                    "severity": {
                        "enum": [
                            "info",
                            "warning",
                            "error"
                        ],
                        "description": "Severity level of the problem, which is used in UI to differentiate."
                    },
                    "message": {
                        "type": "string",
                        "description": "Message generated by the consistency check describing the problem."
                    }
                }
            }
        },
        "schemaVersion": {
            "description": "entity's schema version. Used to distinct between different schemas.",
            "type": "string",
            "default": "2022.8.16"
        },
        "name": {
            "description": "entity name",
            "type": "string"
        },
        "isDefault": {
            "description": "Identifies that entity is defaultable",
            "type": "boolean",
            "default": false
        }
    }
}