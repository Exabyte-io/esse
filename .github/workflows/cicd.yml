name: Continuous Testing and Publication from 'dev'

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  run-py-linter:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8.6]

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Checkout actions repository
        uses: actions/checkout@v4
        with:
          repository: Exabyte-io/actions
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          path: actions

      - name: Run ruff linter
        uses: ./actions/py/lint
        with:
          python-version: ${{ matrix.python-version }}

  run-py-tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version:
          - 3.8.6
          - 3.9.x
          # Enable after resolving Cython/PyYAML issue https://github.com/yaml/pyyaml/issues/724
          # - 3.10.x
          # - 3.11.x
          # Enable after: AttributeError: module 'pkgutil' has no attribute 'ImpImporter'. Did you mean: 'zipimporter'?
          # - 3.12.x

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Checkout actions repository
        uses: actions/checkout@v4
        with:
          repository: Exabyte-io/actions
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          path: actions

      - name: Run python tests
        uses: ./actions/py/test
        with:
          python-version: ${{ matrix.python-version }}

  run-js-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14.x
          - 20.x

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Checkout actions repository
        uses: actions/checkout@v4
        with:
          repository: Exabyte-io/actions
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          path: actions

      - name: Run JS validate
        uses: ./actions/js/validate
        with:
          node-version: '14.x'

      - name: Run JS tests
        uses: ./actions/js/test
        with:
          node-version: ${{ matrix.node-version }}

  publish-js-package:
    needs: [run-py-linter, run-py-tests, run-js-tests]
    runs-on: ubuntu-latest
    if: github.ref_name == 'dev'

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Checkout actions repository
        uses: actions/checkout@v4
        with:
          repository: Exabyte-io/actions
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          path: actions

      - name: Publish JS release
        uses: ./actions/js/publish
        with:
          npm-token: ${{ secrets.NPM_TOKEN }}
          github-token: ${{ secrets.BOT_GITHUB_TOKEN }}


  publish-py-package:
    needs: [run-py-linter, run-py-tests, run-js-tests]
    runs-on: ubuntu-latest
    if: github.ref_name == 'dev'

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Checkout actions repository
        uses: actions/checkout@v4
        with:
          repository: Exabyte-io/actions
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          path: actions

      - name: Publish python release
        uses: ./actions/py/publish
        with:
          python-version: 3.x
          github-token: ${{ secrets.BOT_GITHUB_TOKEN }}
          pypi-username: ${{ secrets.PYPI_USERNAME }}
          pypi-password: ${{ secrets.PYPI_PASSWORD }}
          publish-tag: 'false'

  deploy-docs:
    needs: [publish-py-package, publish-js-package]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 20.x
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org

      - name: Build
        shell: bash -l {0}
        run: |
          npm install
          echo "Building Schemas and Examples"
          npm run build:assets-with-docs
          echo "List build directory ./docs/js"
          ls -l docs/js

      - name: Generate Directory Listings
        uses: jayanta525/github-pages-directory-listing@v4.0.0
        with:
          FOLDER: docs/js      #directory to generate index

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        # If you're changing the branch from main,
        # also change the `main` in `refs/heads/main`
        # below accordingly.
        # if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/js
