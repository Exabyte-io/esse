{
    "$id": "software-directory/modeling/espresso/arguments",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "quantum espresso arguments schema",
    "type": "object",
    "properties": {
        "nimage": {
            "description": "Processors can be divided into different `images`, each corresponding to a different self-consistent or linear-response calculation, loosely coupled to others.",
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "maximum": 100
        },
        "npools": {
            "description": "Each image can be subpartitioned into `pools`, each taking care of a group of k-points.",
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "maximum": 100
        },
        "nband": {
            "description": "Each pool is subpartitioned into `band groups`, each taking care of a group of Kohn-Sham orbitals (also called bands, or wavefunctions).",
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "maximum": 100
        },
        "ntg": {
            "description": "In order to allow good parallelization of the 3D FFT when the number of processors exceeds the number of FFT planes, FFTs on Kohn-Sham states are redistributed to `task` groups so that each group can process several wavefunctions at the same time.",
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "maximum": 100
        },
        "ndiag": {
            "description": "A further level of parallelization, independent on PW or k-point parallelization, is the parallelization of subspace diagonalization / iterative orthonormalization. Both operations required the diagonalization of arrays whose dimension is the number of Kohn-Sham states (or a small multiple of it). All such arrays are distributed block-like across the `linear-algebra group`, a subgroup of the pool of processors, organized in a square 2D grid. As a consequence the number of processors in the linear-algebra group is given by n2, where n is an integer; n2 must be smaller than the number of processors in the PW group. The diagonalization is then performed in parallel using standard linear algebra operations.",
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "maximum": 100
        }
    },
    "additionalProperties": false
}
