{
    "$id": "job/compute",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "compute arguments schema",
    "description": "Custom keywords prefixed with validate correspond to custom validation methods implemented downstream",
    "properties": {
        "queue": {
            "description": "Name of the submission queues: https://docs.mat3ra.com/infrastructure/resource/queues/. Below enums are for Azure, then AWS circa 2022-08, hence the duplication.",
            "type": "string",
            "enum": [
                "D",
                "OR",
                "OF",
                "OFplus",
                "SR",
                "SF",
                "SFplus",
                "GPOF",
                "GP2OF",
                "GP4OF",
                "GPSF",
                "GP2SF",
                "GP4SF",
                "OR4",
                "OR8",
                "OR16",
                "SR4",
                "SR8",
                "SR16",
                "GOF",
                "G4OF",
                "G8OF",
                "GSF",
                "G4SF",
                "G8SF"
            ]
        },
        "nodes": {
            "description": "number of nodes used for the job inside the RMS.",
            "type": "integer",
            "validateNodes": {}
        },
        "ppn": {
            "description": "number of CPUs used for the job inside the RMS.",
            "type": "integer",
            "validatePpn": {}
        },
        "timeLimit": {
            "description": "Wallclock time limit for computing a job. Clock format: 'hh:mm:ss'",
            "type": "string",
            "validateTimeLimit": {}
        },
        "timeLimitType": {
            "description": "Convention to use when reasoning about time limits",
            "type": "string",
            "default": "per single attempt",
            "enum": [
                "per single attempt",
                "compound"
            ]
        },
        "isRestartable": {
            "description": "Job is allowed to restart on termination.",
            "type": "boolean",
            "default": true
        },
        "notify": {
            "description": "Email notification for the job: n - never, a - job aborted, b - job begins, e - job ends. Last three could be combined.",
            "type": "string"
        },
        "email": {
            "description": "Email address to notify about job execution.",
            "type": "string"
        },
        "maxCPU": {
            "description": "Maximum CPU count per node. This parameter is used to let backend job submission infrastructure know that this job is to be charged for the maximum CPU per node instead of the actual ppn. For premium/fast queues where resources are provisioned on-demand and exclusively per user.",
            "type": "integer"
        },
        "arguments": {
            "description": "Optional arguments specific to using application - VASP, Quantum Espresso, etc. Specified elsewhere",
            "type": "object",
            "default": {},
            "oneOf": [
                {
                    "$ref": "../software_directory/modeling/espresso/arguments.json"
                }
            ]
        },
        "cluster": {
            "description": "Cluster where the job is executed. Optional on create. Required on job submission.",
            "type": "object",
            "properties": {
                "fqdn": {
                    "description": "FQDN of the cluster. e.g. master-1-staging.exabyte.io",
                    "type": "string"
                },
                "jid": {
                    "description": "Job's identity in RMS. e.g. 1234.master-1-staging.exabyte.io",
                    "type": "string"
                }
            }
        },
        "errors": {
            "description": "Computation error. Optional. Appears only if something happens on jobs execution.",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "domain": {
                        "description": "Domain of the error appearance (internal).",
                        "type": "string",
                        "enum": [
                            "rupy",
                            "alfred",
                            "celim",
                            "webapp"
                        ]
                    },
                    "reason": {
                        "description": "Should be a short, unique, machine-readable error code string. e.g. FileNotFound",
                        "type": "string"
                    },
                    "message": {
                        "description": "Human-readable error message. e.g. 'File Not Found: /home/demo/data/project1/job-123/job-config.json'",
                        "type": "string"
                    },
                    "traceback": {
                        "description": "Full machine-readable error traceback. e.g. FileNotFound",
                        "type": "string"
                    }
                }
            }
        },
        "excludeFilesPattern": {
            "description": "A Python compatible regex to exclude files from upload. e.g. ^.*.txt& excludes all files with .txt suffix",
            "type": "string"
        }
    },
    "required": [
        "queue",
        "nodes",
        "ppn",
        "timeLimit"
    ]
}
