{
    "schemaId": "model-unit",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "unit model schema",
    "type": "object",
    "properties": {
        "tier1": {
            "description": "top-level category, e.g. `physics-based`",
            "$ref": "../core/primitive/slugified_entry_or_slug.json"
        },
        "tier2": {
            "description": "second level category, e.g. `quantum mechanical`",
            "$ref": "../core/primitive/slugified_entry_or_slug.json"
        },
        "tier3": {
            "description": "third level category, e.g. `ab initio`",
            "$ref": "../core/primitive/slugified_entry_or_slug.json"
        },
        "type": {
            "description": "general type of the model, eg. `dft`",
            "$ref": "../core/primitive/slugified_entry_or_slug.json"
        },
        "subtype": {
            "description": "general subtype of the model, eg. `lda`",
            "$ref": "../core/primitive/slugified_entry_or_slug.json"
        },
        "method": {
            "$ref": "../method.json"
        },
        "reference": {
            "$ref": "../core/reference/literature.json"
        },
        "augmentations": {
            "$ref": "augmentations.json"
        },
        "modifiers": {
            "$ref": "modifiers.json"
        },
        "tags": {
            "$ref": "tags.json"
        },
        "head": {
            "description": "Whether this unit is the first one in the model sequence.",
            "type": "boolean"
        },
        "modelId": {
            "description": "Identity of the unit model. Used to trace the sequence of models.",
            "type": "string"
        },
        "previous": {
            "description": "Previous unit's modelId. If empty, the current unit is the head.",
            "type": "string"
        },
        "next": {
            "description": "Next unit's modelId. If empty, the current unit is the last.",
            "type": "string"
        }
    },
    "required": [
        "tier1",
        "tier2",
        "tier3",
        "type",
        "method",
        "modelId"
    ]
}
